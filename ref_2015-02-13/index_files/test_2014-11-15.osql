/*-*-sql-*-*******************************************************************
 * AMOS2
 *
 * Author: (c) 2014 Thanh Truong, UDBL
 * $RCSfile: test.osql,v $
 * $Revision: 1.5 $ $Date: 2014/10/31 16:42:01 $
 * $State: Exp $ $Locker:  $
 *
 * Description: Some index property entries
 *
 ****************************************************************************
 * $Log: test.osql,v $
 * Revision 1.5  2014/10/31 16:42:01  thatr500
 * loaded datagenerator
 *
 * Revision 1.4  2014/10/31 15:31:10  thatr500
 * *** empty log message ***
 *
 * Revision 1.3  2014/10/31 08:25:07  thatr500
 * added some functions
 *
 * Revision 1.2  2014/10/30 16:22:10  thatr500
 * *** empty log message ***
 *
 * Revision 1.1  2014/10/29 09:50:22  thatr500
 * added BAO-testers (More code to come)
 *
 ****************************************************************************/
/*--------------------------------------------------------------------------------
 Prepration
----------------------------------------------------------------------------------*/
logging off;
lisp;
(load-extension "datagenerator")
:osql

print("
/*--------------------------------------------------------------------------------
 BAOs TEST
----------------------------------------------------------------------------------*/");

/*Set the current testing index name.Ex: IDXTYPE, XTREE
 Optional: It can be set as environment variable*/
set :idxtype = getEnv("TestIndex");

BAOs_setup(:idxtype);

set :idxkeygen = index_key_generator(:idxtype);

BAOs_populateData(:idxtype, :idxkeygen);

BAOs_lookup_test(:idxtype);

BAOs_mapping_test(:idxtype);

BAOs_deletion_test(:idxtype);

BAOs_remaining_test(:idxtype);

print("
/*--------------------------------------------------------------------------------
 SSF TEST
----------------------------------------------------------------------------------*/");
/*Populdate data once again*/
BAOs_populateData(:idxtype, :idxkeygen);

/*VQI queries are generated*/
set :vqi = ssf_validation_queries(:idxtype);

print("SSF Test " + :idxtype);
/*Verify SSFs by running VQI queries and their corresponding VQR queries*/
verify_SSFs(:vqi);

BAOs_cleanup(:idxtype);
